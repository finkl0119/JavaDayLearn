1. 변수 
	==> 하나의 이름으로 하나의 데이터 형식을 하나만 저장하는 그릇역할
		자료형, 변수명 = 초기값;
		자료형, 변수명;
		자료형 문자-char 정수-int 실수-double 논리-boolean
		기본형
		참조형-string, 배열(기본형)
2. 연산자
		++, --, %, ==, !==, !
3. 입출력
	
4. 조건문
	
5. 반복문
	
6. 배열
	==> 하나의 이름으로 하나의 데이터 형식을 여러개 저장 가능한 공간
	- 1차원 배열 
		배열이 나온 목적 변수의 단점 하나의 값만 저장 가능하다.
		
		int a[] = new int[5];
		1차원 배열 하나의 값 개수 : a.length == 5
		
		for(int i=0; i<a.length; i++){
			a[i] = 배열의 값
		}
		
		int a[] = new int[5];
		for(int k : a){
			k= 배열의 값;
		}
		
		String a[] = new int[5];
		for(String k : a){
			k= 배열의 값;
		}
		
		for(int i=0; i<a.length; i++){
			a[i] = 배열의 값
		}
	
	- 다차원 배열
	1차원 배열 이상의 배열, 일반적으로는 3차열 배열
		int a[][][] = new int[5][5][2];
		int b[][] = new int[2][3];
		int c[][] = new int[5][];
		c[0] = new int[4];
		
		for(i=0; b.length; i++){
			for(j=0; b[i].length; j++){
				system.out.print(b[i][j]+ " ")
			}		
		}
		
		for(i=0; a.length; i++){
			for(j=0; a[i].length; j++){
				for(k=0; a[i][j].length; k++){
					system.out.print(a[i][j][k]+ " ")
				}		
			}
		}
		
		//for-Each 문
		int intArray_0[][][] = new int[3][2][1];
		for(int a[][] : intArray_0) {
			for(int b[] : a) {
				for(int c : b) {
					System.out.print(c + " ");
				}
			}
		}
		
		int [] n = {1, 2, 3, 4, 5};
		String names[] = {"사과", "배","바나나", "체리","딸기", "포도"};
		
		int sum = 0;
		for(int k : n) {
			System.out.print(k+ " ");
			sum +=k;
		}
		System.out.println("합은 " + sum);
		
		for(String s : names) {
			System.out.print(s + " ");
		}
		
		https://m.blog.naver.com/PostView.nhn?blogId=seonjun92&logNo=221539418477&categoryNo=7&proxyReferer=https:%2F%2Fwww.google.com%2F
	
	
	
	
	
	
	